name: ðŸ§ª CI

on:
  workflow_dispatch:

  push:
    branches:
      - main

env:
  NAME: Liam Neville
  FORMAT: SINGLES
  GENDER: M
  LEVEL: "4.0"
  SECTION: New England
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Unit tests
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Markdown lint
        uses: DavidAnson/markdownlint-cli2-action@v10
        with:
          command: config
          globs: |
            config/.markdownlint.jsonc
            **/*.md

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: ðŸ§ª Test
        run: |
          dotnet test

  # Build + Push test image
  build-and-push-image:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}"

  multi-platform-run:
    runs-on: ${{ matrix.os }}
    needs: build-and-push-image
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - if: matrix.os == 'macos-latest'
        name: Setup Docker on macOS
        uses: douglascamata/setup-docker-macos-action@v1-alpha

      - name: Docker run
        run: |
          echo 'EMAIL_BODY<<EOF' >> $GITHUB_ENV
          docker run ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} rankings get -n '${{ env.NAME }}' -f '${{ env.FORMAT }}' -g '${{ env.GENDER }}' -l '${{ env.LEVEL }}' -s '${{ env.SECTION }}' -o html >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          echo "$EMAIL_BODY" >> $GITHUB_SUMMARY
